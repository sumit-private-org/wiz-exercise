name: Deploy Infrastructure (Terraform)

on:
  push:
    branches:
      - main # Or your primary branch
    paths:
      # Adjust path if your terraform files are elsewhere
      - 'terraform/**'
      - '.github/workflows/infra_deploy_terraform.yaml'
  workflow_dispatch: # Allow manual trigger

env:
  # Set your Terraform working directory
  TF_WORKING_DIR: terraform
  # Set your GCP Project ID
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  # Set your GCP Workload Identity Provider
  # Format: projects/<PROJECT_NUMBER>/locations/global/workloadIdentityPools/<POOL_ID>/providers/<PROVIDER_ID>
  GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
  # Set the Service Account email GitHub Actions will impersonate
  GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }} # e.g., github-actions-deployer@<your-project-id>.iam.gserviceaccount.com
  # Optional: Set Terraform Cloud/GCS backend bucket if needed
  # TF_BACKEND_BUCKET: '<YOUR_TF_STATE_BUCKET>'

permissions:
  contents: read
  id-token: write # Required for Workload Identity Federation

jobs:
  terraform:
    name: 'Terraform Plan & Apply'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: $GCP_WORKLOAD_IDENTITY_PROVIDER
        service_account: $GCP_SERVICE_ACCOUNT

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      # with:
      #   terraform_version: <specific_version> # Optional: Pin version

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: $TF_WORKING_DIR
      # Add backend config if using GCS/Terraform Cloud
      # run: terraform init -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}"

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: $TF_WORKING_DIR

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -out=tfplan
      working-directory: $TF_WORKING_DIR

    - name: Terraform Apply
      id: apply
      # Only apply on the main branch automatically
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve tfplan
      working-directory: $TF_WORKING_DIR
